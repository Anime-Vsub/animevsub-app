import{W as a}from"./index.b340747c.js";import{I as r,N as e}from"./_season.21538113.js";import"./ClosePopup.958d94b2.js";import"./AddToPlaylist.63bb2dcb.js";import"./selection.b3caa21c.js";import"./QList.49fcf7be.js";import"./QItemLabel.04b33259.js";import"./playlist.7417ec6b.js";import"./urlImage.0db39262.js";import"./forceHttp2.94a52bc8.js";import"./dayjs.937bb0b8.js";import"./history.ba3244ca.js";import"./scrollIntoView.02f1312b.js";import"./QResponsive.78e99726.js";import"./touch.9d375472.js";import"./use-cache.bd3a070e.js";import"./SkeletonGridCard.a0609b5c.js";import"./SkeletonCard.3d677a39.js";import"./ScreenError.29d1ac58.js";import"./index.a60c2c0b.js";import"./ranks.6b7a2e33.js";import"./QSkeleton.fe02f028.js";import"./QInfiniteScroll.323eba28.js";import"./useCache.a72482f3.js";import"./index.es.9bf2f817.js";class B extends a{constructor(){super(...arguments),this.selectionStarted=!1}async impact(t){const i=this.patternForImpact(t==null?void 0:t.style);this.vibrateWithPattern(i)}async notification(t){const i=this.patternForNotification(t==null?void 0:t.type);this.vibrateWithPattern(i)}async vibrate(t){const i=(t==null?void 0:t.duration)||300;this.vibrateWithPattern([i])}async selectionStart(){this.selectionStarted=!0}async selectionChanged(){this.selectionStarted&&this.vibrateWithPattern([70])}async selectionEnd(){this.selectionStarted=!1}patternForImpact(t=r.Heavy){return t===r.Medium?[43]:t===r.Light?[20]:[61]}patternForNotification(t=e.Success){return t===e.Warning?[30,40,30,50,60]:t===e.Error?[27,45,50]:[35,65,21]}vibrateWithPattern(t){if(navigator.vibrate)navigator.vibrate(t);else throw this.unavailable("Browser does not support the vibrate API")}}export{B as HapticsWeb};
